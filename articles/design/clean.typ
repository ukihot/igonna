== クリーンアーキテクチャへの招待

ドメインモデル、ユースケース、プレゼンテーションに分かれる。
これらは輪となり、変更が少ない情報ほど内に配置される。

ドメインモデルは設計の核であり、そのシステムを開発することになった発端でもある。
この核はシステム開発となんら関係ない普遍的なものになり、一般にビジネスロジックという。
例えば、「じゃんけんではグーがチョキに勝つ」等の情報レベルで、ここに変更を入れることはできない。
システム仕様ではなく、原則や規則にあたる。

ユースケースは、ドメインモデルを取扱い、ユーザ（クライアント）からの指令を果たす。
例えば、チョキとグーという二つの入力を受け取り、どちらが勝者なのか判定を返却する。
ただし、ユースケース自身は「チョキよりグーの方が強い」ことに関心は無く、あくまでドメインモデルに問合せているに過ぎない。
また、問合せ結果を返却する責務に留まり、クライアントに対して直接「勝ちました/負けました」を表示するのは、プレゼンテーションが担当する。

プレゼンテーションは常にクライアントと対峙している。
フォントサイズ、色、位置、テキスト入力など、システムとユーザが接する窓口（インターフェース）である。

飲食店ならば、ホールがプレゼンテーション、キッチンがユースケース、マニュアルがドメインモデルにあたるだろう。
客がキッチンに入ってきたり、本社へマニュアルを変更させるようなクレームが無い限り、規定（ドメインモデル）通りに調理（ユースケース）された料理を客に提供（プレゼンテーション）するシステムはクリーンアーキテクチャにみえる。

実際の開発では、より複雑な概念や抽象的な事象を捉えていく必要があるため、ここではざっくりとした説明に留めた。
エンティティ、ドメイン貧血、インフラストラクチャー層や依存性逆転の法則にまだ触れていないため、じゃんけんや飲食店の例は当たらずといえども遠からずだである.
それぞれの責務ごとに隔離することで、テストしやすい構造にしようとしているのだな、程度の理解があれば足りる。